%%%-------------------------------------------------------------------
%%% @doc
%%% 이 모듈은 Erlang의 패턴 매칭 기능을 상세하게 예시하는 코드입니다.
%%%
%%% 본 예제에서는 다음 패턴 매칭 주제들을 다룹니다:
%%% 1. 튜플을 사용한 기본 패턴 매칭:
%%%    - 튜플의 구조와 각 요소를 변수에 바인딩하는 방법을 설명합니다.
%%%
%%% 2. 리스트를 사용한 패턴 매칭:
%%%    - 리스트의 첫 요소와 나머지 리스트를 분리하는 방법([Head | Tail])을 보여줍니다.
%%%
%%% 3. 중첩된 데이터 구조의 패턴 매칭:
%%%    - 중첩된 튜플을 통해 내부의 값을 추출하는 기법을 설명합니다.
%%%
%%% 4. 가드를 활용한 패턴 매칭:
%%%    - 패턴 매칭에 추가 조건(가드)을 부여하여 다양한 상황을 처리하는 방법을 예시합니다.
%%%
%%% 각 섹션은 io:format/2 함수를 사용해 결과를 출력하며, 최종적으로 모든 예제 결과를 하나의 튜플로 반환합니다.
%%%
%%%-------------------------------------------------------------------
-module(pattern_matching_examples).

%% 외부에서 호출할 수 있도록 패턴 매칭 예제 함수를 export 합니다.
-export([pattern_matching_demo/0]).

%%%-------------------------------------------------------------------
%%% @doc
%%% pattern_matching_demo/0 함수는 여러 패턴 매칭 기법들을 예시하며, 
%%% 각 예제의 실행 결과를 콘솔에 출력한 후, 그 결과들을 하나의 튜플로 반환합니다.
%%%
%%% @spec pattern_matching_demo() -> tuple()
%%%-------------------------------------------------------------------
pattern_matching_demo() ->
    %% ================================================================
    %% 1. 튜플을 사용한 기본 패턴 매칭
    %% ================================================================
    %% 예제 설명:
    %% - 튜플은 고정된 개수의 요소를 가진 데이터 구조입니다.
    %% - 패턴 매칭을 사용하면 튜플의 각 요소를 개별 변수에 바인딩할 수 있습니다.
    %% 아래에서는 {ok, 42} 튜플을 {ok, MatchedValue} 패턴으로 매칭하여,
    %% MatchedValue에 42가 할당되는 예제를 보여줍니다.
    TupleValue = {ok, 42},
    {ok, MatchedValue} = TupleValue,
    
    %% ================================================================
    %% 2. 리스트를 사용한 패턴 매칭
    %% ================================================================
    %% 예제 설명:
    %% - 리스트 패턴 매칭은 리스트의 첫 번째 요소와 나머지 리스트를 분리할 때 사용됩니다.
    %% - [Head | Tail] 패턴을 사용하면, 리스트의 첫 요소는 Head에,
    %%   나머지 요소들은 Tail에 바인딩됩니다.
    %% 예: [1, 2, 3, 4, 5] 리스트에서 Head는 1, Tail은 [2, 3, 4, 5]가 됩니다.
    ListExample = [1, 2, 3, 4, 5],
    [Head | Tail] = ListExample,
    
    %% ================================================================
    %% 3. 중첩된 데이터 구조의 패턴 매칭
    %% ================================================================
    %% 예제 설명:
    %% - 중첩된 튜플 구조를 사용하면 내부에 포함된 데이터를 한 번에 추출할 수 있습니다.
    %% - 아래 예제에서는 사용자 정보를 담은 튜플을 통해 이름과 나이를 각각 추출합니다.
    %%   {user, {name, "Alice"}, {age, 30}} 형태의 데이터에서
    %%   내부의 "Alice"와 30을 Name, Age에 각각 바인딩합니다.
    NestedData = {user, {name, "Alice"}, {age, 30}},
    {user, {name, Name}, {age, Age}} = NestedData,
    
    %% ================================================================
    %% 4. 가드를 활용한 패턴 매칭
    %% ================================================================
    %% 예제 설명:
    %% - 가드(guard)는 패턴 매칭에 추가적인 조건을 부여하여 더욱 세밀한 매칭을 수행할 수 있게 합니다.
    %% - 여기서는 {point, X, Y} 형태의 튜플을 통해 좌표를 표현하고,
    %%   X와 Y 값에 따라 해당 점이 어느 사분면에 속하는지를 결정합니다.
    %%   예를 들어, X와 Y가 모두 양수이면 "제1사분면"으로 분류합니다.
    Point = {point, 10, 20},
    Quadrant = case Point of
        {point, X, Y} when X > 0, Y > 0 ->
            "제1사분면";
        {point, X, Y} when X < 0, Y > 0 ->
            "제2사분면";
        {point, X, Y} when X < 0, Y < 0 ->
            "제3사분면";
        {point, X, Y} when X > 0, Y < 0 ->
            "제4사분면";
        _ ->
            "원점 또는 축에 위치"
    end,
    
    %% ================================================================
    %% 결과 출력 (Printing the Results)
    %% ================================================================
    %% io:format/2 함수를 사용해 각 예제의 결과를 콘솔에 출력합니다.
    io:format("~n--- Erlang 패턴 매칭 예제 ---~n", []),
    io:format("1. 튜플 패턴 매칭: {ok, 42}에서 MatchedValue = ~p~n", [MatchedValue]),
    io:format("2. 리스트 패턴 매칭: Head = ~p, Tail = ~p~n", [Head, Tail]),
    io:format("3. 중첩 패턴 매칭: Name = ~p, Age = ~p~n", [Name, Age]),
    io:format("4. 가드를 사용한 패턴 매칭: Point ~p는 ~s~n", [Point, Quadrant]),
    
    %% 최종 결과들을 하나의 튜플로 반환합니다.
    {pattern_matching_demo,
     MatchedValue, Head, Tail, Name, Age, Quadrant}.

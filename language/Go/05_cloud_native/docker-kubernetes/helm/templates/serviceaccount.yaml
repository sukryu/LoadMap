{{/* 
    serviceaccount.yaml - Go 백엔드 애플리케이션을 위한 Kubernetes ServiceAccount 리소스 템플릿
    
    이 템플릿은 values.yaml에서 정의된 값을 사용하여 Kubernetes ServiceAccount 리소스를 생성합니다.
    ServiceAccount는 Pod가 Kubernetes API 서버와 상호 작용할 때 사용하는 ID입니다.
    RBAC(Role-Based Access Control)와 함께 사용하여 포드에 필요한 권한을 제공합니다.
    
    이 ServiceAccount는 .Values.serviceAccount.create가 true인 경우에만 생성됩니다.
  */}}
  {{- if .Values.serviceAccount.create -}}
  apiVersion: v1
  kind: ServiceAccount
  metadata:
    # ServiceAccount 이름 - 템플릿 헬퍼 함수를 통해 생성
    name: {{ include "go-api.serviceAccountName" . }}
    # 네임스페이스 - 릴리스가 설치된 네임스페이스 사용
    namespace: {{ .Release.Namespace }}
    # 레이블 - 차트 표준 레이블 적용
    labels:
      {{- include "go-api.labels" . | nindent 4 }}
    # 어노테이션 - values.yaml에서 정의된 서비스 어카운트 어노테이션 적용
    # 클라우드 프로바이더 통합 등에 사용됨 (예: AWS IAM Role, GCP Workload Identity)
    {{- with .Values.serviceAccount.annotations }}
    annotations:
      {{- toYaml . | nindent 4 }}
    {{- end }}
    
  {{/* 
    RBAC 정의 - 서비스 어카운트의 권한을 정의하는 Role과 RoleBinding 생성
    values.yaml의 serviceAccount.rbac.create가 true인 경우에만 생성
  */}}
  {{- if .Values.serviceAccount.rbac.create }}
  ---
  apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    # Role 이름 - 서비스 어카운트 이름에 -role 접미사 추가
    name: {{ include "go-api.serviceAccountName" . }}-role
    # 네임스페이스 - 릴리스가 설치된 네임스페이스 사용
    namespace: {{ .Release.Namespace }}
    # 레이블 - 차트 표준 레이블 적용
    labels:
      {{- include "go-api.labels" . | nindent 4 }}
  # 규칙 - ServiceAccount에 부여할 권한 정의
  rules:
    {{- if .Values.serviceAccount.rbac.rules }}
    # values.yaml에서 정의된 사용자 지정 규칙 적용
    {{- toYaml .Values.serviceAccount.rbac.rules | nindent 2 }}
    {{- else }}
    # 기본 규칙 - 일반적인 앱에 필요한 최소 권한
    
    # 포드 자신의 정보 읽기
    - apiGroups: [""]
      resources: ["pods"]
      verbs: ["get", "list"]
      resourceNames: ["{{ include "go-api.fullname" . }}-*"]
    
    # 서비스 디스커버리를 위한 서비스 및 엔드포인트 읽기
    - apiGroups: [""]
      resources: ["services", "endpoints"]
      verbs: ["get", "list", "watch"]
    
    # ConfigMap 및 Secret 읽기 (애플리케이션 구성 및 인증 정보 접근용)
    - apiGroups: [""]
      resources: ["configmaps", "secrets"]
      verbs: ["get", "list"]
      # 자신의 ConfigMap과 Secret에만 접근 제한
      resourceNames: 
        - "{{ include "go-api.fullname" . }}-config"
        - "{{ include "go-api.fullname" . }}-secrets"
    
    # 이벤트 생성 (애플리케이션 이벤트 보고용)
    - apiGroups: [""]
      resources: ["events"]
      verbs: ["create", "patch"]
    
    {{- if .Values.serviceAccount.rbac.monitoring }}
    # 모니터링 통합을 위한 권한 (Prometheus ServiceMonitor 등)
    - apiGroups: ["monitoring.coreos.com"]
      resources: ["servicemonitors", "podmonitors"]
      verbs: ["get"]
    {{- end }}
    
    {{- if .Values.serviceAccount.rbac.leaderElection }}
    # 리더 선출을 위한 권한 (여러 복제본이 있는 경우 리더 선택용)
    - apiGroups: ["coordination.k8s.io"]
      resources: ["leases"]
      verbs: ["get", "list", "watch", "create", "update", "patch"]
    {{- end }}
    {{- end }}
  
  ---
  apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    # RoleBinding 이름 - 서비스 어카운트 이름에 -rolebinding 접미사 추가
    name: {{ include "go-api.serviceAccountName" . }}-rolebinding
    # 네임스페이스 - 릴리스가 설치된 네임스페이스 사용
    namespace: {{ .Release.Namespace }}
    # 레이블 - 차트 표준 레이블 적용
    labels:
      {{- include "go-api.labels" . | nindent 4 }}
  # Role과 Subject(ServiceAccount) 연결
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: {{ include "go-api.serviceAccountName" . }}-role
  subjects:
  - kind: ServiceAccount
    name: {{ include "go-api.serviceAccountName" . }}
    namespace: {{ .Release.Namespace }}
  
  {{/* 
    클러스터 수준 권한 - 클러스터 전체 리소스에 접근이 필요한 경우
    values.yaml의 serviceAccount.rbac.clusterWide가 true인 경우에만 생성
  */}}
  {{- if .Values.serviceAccount.rbac.clusterWide }}
  ---
  apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    # ClusterRole 이름 - 서비스 어카운트 이름에 -clusterrole 접미사 추가
    name: {{ include "go-api.serviceAccountName" . }}-clusterrole
    # 레이블 - 차트 표준 레이블 적용
    labels:
      {{- include "go-api.labels" . | nindent 4 }}
  # 클러스터 수준 규칙 - 여러 네임스페이스에 걸친 권한
  rules:
    {{- if .Values.serviceAccount.rbac.clusterRules }}
    # values.yaml에서 정의된 사용자 지정 클러스터 규칙 적용
    {{- toYaml .Values.serviceAccount.rbac.clusterRules | nindent 2 }}
    {{- else }}
    # 기본 클러스터 규칙
    
    # 노드 정보 읽기 (노드 메타데이터, 레이블 등)
    - apiGroups: [""]
      resources: ["nodes"]
      verbs: ["get", "list"]
    
    {{- if .Values.serviceAccount.rbac.clusterMonitoring }}
    # 클러스터 수준 모니터링 객체 접근 (Prometheus 등)
    - apiGroups: ["monitoring.coreos.com"]
      resources: ["prometheuses", "alertmanagers"]
      verbs: ["get", "list", "watch"]
    {{- end }}
    {{- end }}
  
  ---
  apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    # ClusterRoleBinding 이름 - 서비스 어카운트 이름에 -clusterrolebinding 접미사 추가
    name: {{ include "go-api.serviceAccountName" . }}-clusterrolebinding
    # 레이블 - 차트 표준 레이블 적용
    labels:
      {{- include "go-api.labels" . | nindent 4 }}
  # ClusterRole과 Subject(ServiceAccount) 연결
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: {{ include "go-api.serviceAccountName" . }}-clusterrole
  subjects:
  - kind: ServiceAccount
    name: {{ include "go-api.serviceAccountName" . }}
    namespace: {{ .Release.Namespace }}
  {{- end }}
  {{- end }}
  {{- end }}
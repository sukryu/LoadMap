{{/* 
    ingress.yaml - Go 백엔드 애플리케이션을 위한 Kubernetes Ingress 리소스 템플릿
    
    이 템플릿은 values.yaml에서 정의된 값을 사용하여 Kubernetes Ingress 리소스를 생성합니다.
    Ingress는 클러스터 외부에서 내부 서비스로의 HTTP/HTTPS 라우팅 규칙을 정의하며,
    TLS 종료, 가상 호스팅, 경로 기반 라우팅 등의 기능을 제공합니다.
    
    이 리소스는 .Values.ingress.enabled가 true인 경우에만 생성됩니다.
  */}}
  {{- if .Values.ingress.enabled -}}
  {{- $fullName := include "go-api.fullname" . -}}
  {{- $svcPort := .Values.service.port -}}
  {{- if and .Values.ingress.className (not (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion)) }}
    {{- if not (hasKey .Values.ingress.annotations "kubernetes.io/ingress.class") }}
    {{- $_ := set .Values.ingress.annotations "kubernetes.io/ingress.class" .Values.ingress.className}}
    {{- end }}
  {{- end }}
  {{- if semverCompare ">=1.19-0" .Capabilities.KubeVersion.GitVersion -}}
  apiVersion: networking.k8s.io/v1
  {{- else if semverCompare ">=1.14-0" .Capabilities.KubeVersion.GitVersion -}}
  apiVersion: networking.k8s.io/v1beta1
  {{- else -}}
  apiVersion: extensions/v1beta1
  {{- end }}
  kind: Ingress
  metadata:
    # Ingress 리소스 이름 - 템플릿 헬퍼 함수를 통해 생성
    name: {{ $fullName }}
    # 네임스페이스 - 릴리스가 설치된 네임스페이스 사용
    namespace: {{ .Release.Namespace }}
    # 레이블 - 차트 표준 레이블 적용
    labels:
      {{- include "go-api.labels" . | nindent 4 }}
    # 어노테이션 - Ingress 컨트롤러 및 기타 기능 구성에 사용
    # 많은 Ingress 기능은 어노테이션을 통해 설정됩니다
    annotations:
      {{- with .Values.ingress.annotations }}
      {{- toYaml . | nindent 4 }}
      {{- end }}
  spec:
    {{- if and .Values.ingress.className (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion) }}
    # Ingress 클래스 이름 - 어떤 Ingress 컨트롤러가 이 리소스를 처리할지 지정
    # Kubernetes 1.18 이상에서 사용 가능한 필드입니다
    ingressClassName: {{ .Values.ingress.className }}
    {{- end }}
    
    {{- if .Values.ingress.tls }}
    # TLS 설정 - HTTPS 연결을 위한 인증서 및 도메인 구성
    tls:
      {{- range .Values.ingress.tls }}
      - hosts:
          {{- range .hosts }}
          - {{ . | quote }}
          {{- end }}
        # TLS 인증서 및 개인 키가 저장된 Secret 이름
        secretName: {{ .secretName }}
      {{- end }}
    {{- end }}
    
    # 라우팅 규칙 - 들어오는 요청을 어떻게 서비스로 라우팅할지 정의
    rules:
      {{- range .Values.ingress.hosts }}
      - host: {{ .host | quote }}
        http:
          paths:
            {{- range .paths }}
            - path: {{ .path }}
              {{- if and .pathType (semverCompare ">=1.18-0" $.Capabilities.KubeVersion.GitVersion) }}
              # 경로 타입 - 경로 매칭 방식을 정의 (Kubernetes 1.18 이상)
              # - Exact: 정확히 일치하는 URL 경로만 매칭
              # - Prefix: 지정된 접두사로 시작하는 URL 경로 매칭
              # - ImplementationSpecific: Ingress 컨트롤러의 구현에 따라 다름
              pathType: {{ .pathType }}
              {{- end }}
              backend:
                {{- if semverCompare ">=1.19-0" $.Capabilities.KubeVersion.GitVersion }}
                # Kubernetes 1.19 이상의 백엔드 정의 방식
                service:
                  # 트래픽을 전달할 서비스 이름
                  name: {{ $fullName }}
                  # 서비스 포트 정의 - 이름 또는 번호로 지정 가능
                  port:
                    {{- if .backend.servicePort }}
                    number: {{ .backend.servicePort }}
                    {{- else }}
                    number: {{ $svcPort }}
                    {{- end }}
                {{- else }}
                # Kubernetes 1.18 이하의 백엔드 정의 방식
                serviceName: {{ $fullName }}
                servicePort: {{ .backend.servicePort | default $svcPort }}
                {{- end }}
            {{- end }}
      {{- end }}
      
      {{- if .Values.ingress.extraRules }}
      # 추가 라우팅 규칙 - values.yaml에서 정의된 사용자 정의 규칙
      {{- toYaml .Values.ingress.extraRules | nindent 4 }}
      {{- end }}
      
    {{- if .Values.ingress.defaultBackend }}
    # 기본 백엔드 - 매칭되는 규칙이 없을 때 트래픽을 전달할 서비스
    # 일반적으로 404 페이지나 기본 랜딩 페이지를 제공하는 서비스로 설정
    defaultBackend:
      {{- if semverCompare ">=1.19-0" .Capabilities.KubeVersion.GitVersion }}
      service:
        name: {{ .Values.ingress.defaultBackend.service.name }}
        port:
          {{- if .Values.ingress.defaultBackend.service.port.name }}
          name: {{ .Values.ingress.defaultBackend.service.port.name }}
          {{- else }}
          number: {{ .Values.ingress.defaultBackend.service.port.number }}
          {{- end }}
      {{- else }}
      serviceName: {{ .Values.ingress.defaultBackend.serviceName }}
      servicePort: {{ .Values.ingress.defaultBackend.servicePort }}
      {{- end }}
    {{- end }}
  {{- end }}
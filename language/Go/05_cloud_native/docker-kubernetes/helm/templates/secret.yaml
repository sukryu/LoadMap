{{/* 
    secret.yaml - Go 백엔드 애플리케이션을 위한 Kubernetes Secret 리소스 템플릿
    
    이 템플릿은 values.yaml에서 정의된 값을 사용하여 Kubernetes Secret 리소스를 생성합니다.
    Secret은 비밀번호, API 키, 인증서 등 민감한 정보를 저장하기 위한 리소스입니다.
    Secret에 저장된 값은 base64로 인코딩되어 저장되며, Pod에 환경 변수나 볼륨으로 마운트할 수 있습니다.
    
    주의: Helm chart의 values.yaml에 직접 민감한 정보를 저장하는 것은 보안상 권장되지 않습니다.
    프로덕션 환경에서는 Vault, AWS Secrets Manager, Kubernetes External Secrets 등
    외부 시크릿 관리 도구를 사용하는 것이 좋습니다.
  */}}
  apiVersion: v1
  kind: Secret
  metadata:
    # Secret 이름 - 템플릿 헬퍼 함수를 통해 생성
    name: {{ include "go-api.fullname" . }}-secrets
    # 네임스페이스 - 릴리스가 설치된 네임스페이스 사용
    namespace: {{ .Release.Namespace }}
    # 레이블 - 차트 표준 레이블 적용
    labels:
      {{- include "go-api.labels" . | nindent 4 }}
    # 어노테이션 - 추가 메타데이터 및 통합 설정
    {{- with .Values.secret.annotations }}
    annotations:
      {{- toYaml . | nindent 4 }}
    {{- end }}
  # Secret 유형 - 일반적인 불투명 Secret
  type: Opaque
  data:
    {{/* 
      데이터베이스 인증 정보
      - 자체 Secret 값이 제공되지 않은 경우, values.yaml에서 가져와 base64로 인코딩
      - 보안 강화를 위해 외부 시크릿 관리자를 사용하는 것이 좋음
    */}}
    {{- if and .Values.database.enabled (not .Values.database.existingSecret) }}
    {{- if .Values.secret.database.password }}
    # 데이터베이스 비밀번호 - base64로 인코딩됨
    db-password: {{ .Values.secret.database.password | b64enc | quote }}
    {{- end }}
    
    {{- if .Values.secret.database.connectionString }}
    # 데이터베이스 연결 문자열 - base64로 인코딩됨
    db-connection-string: {{ .Values.secret.database.connectionString | b64enc | quote }}
    {{- else if and .Values.database.host .Values.database.port .Values.database.name .Values.database.username .Values.secret.database.password }}
    # 데이터베이스 연결 문자열 - 개별 속성에서 자동 생성
    {{- if eq .Values.database.type "postgres" }}
    db-connection-string: {{ printf "postgresql://%s:%s@%s:%s/%s" .Values.database.username .Values.secret.database.password .Values.database.host (toString .Values.database.port) .Values.database.name | b64enc | quote }}
    {{- else if eq .Values.database.type "mysql" }}
    db-connection-string: {{ printf "mysql://%s:%s@%s:%s/%s" .Values.database.username .Values.secret.database.password .Values.database.host (toString .Values.database.port) .Values.database.name | b64enc | quote }}
    {{- else if eq .Values.database.type "mongodb" }}
    db-connection-string: {{ printf "mongodb://%s:%s@%s:%s/%s" .Values.database.username .Values.secret.database.password .Values.database.host (toString .Values.database.port) .Values.database.name | b64enc | quote }}
    {{- end }}
    {{- end }}
    {{- end }}
    
    {{/* 
      캐시 인증 정보 (Redis 등)
      - 자체 Secret 값이 제공되지 않은 경우, values.yaml에서 가져와 base64로 인코딩
    */}}
    {{- if and .Values.cache.enabled (not .Values.cache.existingSecret) }}
    {{- if .Values.secret.cache.password }}
    # 캐시 서버 비밀번호 - base64로 인코딩됨
    cache-password: {{ .Values.secret.cache.password | b64enc | quote }}
    {{- end }}
    {{- end }}
    
    {{/* 
      API 인증 정보 (JWT 시크릿, API 키 등)
    */}}
    {{- if .Values.secret.jwt.secretKey }}
    # JWT 서명 비밀 키 - base64로 인코딩됨
    jwt-secret-key: {{ .Values.secret.jwt.secretKey | b64enc | quote }}
    {{- end }}
    
    {{- if .Values.secret.api.key }}
    # API 키 - base64로 인코딩됨
    api-key: {{ .Values.secret.api.key | b64enc | quote }}
    {{- end }}
    
    {{/* 
      외부 서비스 인증 정보
      values.yaml에 정의된 외부 서비스 인증 정보를 포함
    */}}
    {{- range $key, $val := .Values.secret.externalServices }}
    # 외부 서비스 인증 정보 - base64로 인코딩됨
    external-{{ $key }}: {{ $val | b64enc | quote }}
    {{- end }}
    
    {{/* 
      TLS 인증서 및 키 (내부 서비스 간 통신 보안)
      values.yaml에 정의된 인증서 및 키를 포함
    */}}
    {{- if .Values.secret.tls.enabled }}
    {{- if .Values.secret.tls.crt }}
    # TLS 인증서 - base64로 인코딩됨
    tls.crt: {{ .Values.secret.tls.crt | b64enc | quote }}
    {{- end }}
    {{- if .Values.secret.tls.key }}
    # TLS 키 - base64로 인코딩됨
    tls.key: {{ .Values.secret.tls.key | b64enc | quote }}
    {{- end }}
    {{- if .Values.secret.tls.ca }}
    # TLS CA 인증서 - base64로 인코딩됨
    ca.crt: {{ .Values.secret.tls.ca | b64enc | quote }}
    {{- end }}
    {{- end }}
    
    {{/* 
      커스텀 시크릿
      values.yaml에 정의된 사용자 정의 시크릿을 포함
    */}}
    {{- if .Values.secret.custom }}
    {{- range $key, $val := .Values.secret.custom }}
    # 사용자 정의 시크릿 - base64로 인코딩됨
    {{ $key }}: {{ $val | b64enc | quote }}
    {{- end }}
    {{- end }}
    
    {{/* 
      암호화 키
      데이터 암호화에 사용되는 키
    */}}
    {{- if .Values.secret.encryption.key }}
    # 데이터 암호화 키 - base64로 인코딩됨
    encryption-key: {{ .Values.secret.encryption.key | b64enc | quote }}
    {{- end }}
    
    {{/* 
      OAuth 클라이언트 인증 정보
      values.yaml에 정의된 OAuth 클라이언트 ID 및 시크릿
    */}}
    {{- if and .Values.secret.oauth.clientId .Values.secret.oauth.clientSecret }}
    # OAuth 클라이언트 ID - base64로 인코딩됨
    oauth-client-id: {{ .Values.secret.oauth.clientId | b64enc | quote }}
    # OAuth 클라이언트 시크릿 - base64로 인코딩됨
    oauth-client-secret: {{ .Values.secret.oauth.clientSecret | b64enc | quote }}
    {{- end }}
    
    {{/*
      환경 설정 파일
      설정 파일 전체 내용을 Secret에 포함시키기
    */}}
    {{- if .Values.secret.includeFiles }}
    {{- range $filename, $content := .Values.secret.includeFiles }}
    # 설정 파일 - base64로 인코딩됨
    {{ $filename }}: {{ $content | b64enc | quote }}
    {{- end }}
    {{- end }}